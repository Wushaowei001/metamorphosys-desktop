<#@ template language="C#" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ output extension=".py" #>


# ---------------------------------------------------
# Auto generated by CyPhy2CAD
# ---------------------------------------------------
import zipfile
import os
import shutil
import subprocess

components_folder = [ \
<# foreach (var folder in CadFolders)
	{ #>
    r"<#= folder #>", \
<#  } #>
    ]

# call Copy_Parts.bat
copy_bat = 'Copy_Parts.bat'
if os.path.exists(copy_bat):
    try:
        result, error = subprocess.Popen(copy_bat, stdout = subprocess.PIPE, stderr= subprocess.PIPE).communicate()
        with open('zip_log.txt', 'w') as zip_log:
            zip_log.write(result)
            zip_log.write(error)
    except Exception as msg:
        with open('_FAILED.txt', 'w') as f_out:
            f_out.write(str(msg))
            f_out.write('\nNot able to copy cad files.')
        if os.name == 'nt':
            os._exit(3)
        elif os.name == 'posix':
            os._exit(os.EX_OSFILE)

search_path = 'search_META.pro'
if os.path.exists(search_path):
    shutil.copyfile(search_path, search_path + '.local')

with open (search_path, 'w') as search_path_file:
    if os.path.exists('Cad_Auxiliary_Directory'):
        search_path_file.write('".\Cad_Auxiliary_Directory"\n')

    for folder in components_folder:
        search_path_file.write('".\\' + folder + '"\n')

# zip
output_filename = 'source_data.zip'

if os.path.exists(output_filename):
    os.remove(output_filename)

with zipfile.ZipFile(output_filename, 'w', allowZip64=True) as z:
    parent_dir_name = os.path.basename(os.getcwd())
    os.chdir('..\\')
    for dirpath,dirs,files in os.walk(parent_dir_name):
      for f in files:
        if output_filename == f:
            continue
        fn = os.path.join(dirpath, f)
        z.write(fn, compress_type=zipfile.ZIP_DEFLATED)

<#+
public List<string> CadFolders{get;set;}
#>