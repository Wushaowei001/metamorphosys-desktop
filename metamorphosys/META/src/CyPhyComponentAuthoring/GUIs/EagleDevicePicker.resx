<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAGABoAwAAJgAAACAgAAAAABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAZjMzZjMzZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMz
        ZjMzzJlmZjMzZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMzZjMzzJlmzJlmzJlmZjMz
        ZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMzZjMzzJlmzJlmzJlmzJlmzJlmZjMzZjMzAAAAAAAA
        AAAAAAAAAAAAAAAAZjMzZjMzzJlmzJlmzJlmzJlmzJlmzJlmzJlmZjMzZjMzAAAAAAAAAAAAAAAAZjMz
        ZjMzzJlmzJlmzJlmzJlmzJlmzJlmzJlmzJlmmWZmZjMzZjMzAAAAAAAAZjMzZjMzzJlmzJlmzJlmzJlm
        zJlmzJlmzJlmzJlmmWZmmWZmzGYzZjMzZjMzAAAAAAAAZjMzZjMzzJlmZjMzZjMzZjMzZjMzzJlmmWZm
        mWZmzGYzZjMzZjMzAAAAAAAAAAAAAAAAZjMzZjMzZjMzAAAAAAAAZjMzmWZmmWZmzGYzmWYzZjMzAAAA
        AAAAAAAAAAAAAAAAAAAAZjMzAAAAAAAAAAAAZjMzmWZmzGYzmWYzmWYzZjMzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAZjMzZjMzzGYzmWYzmWYzmWYzZjMzZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMz
        ZjMzzGYzZjMzZjMzZjMzZjMzmWYzZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMzZjMzZjMzAAAA
        AAAAZjMzZjMzZjMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZjMzAAAAAAAAAAAAAAAAAAAAAAAA
        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
        UCBxTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5uTB4eFQ1uUzqngFqiflsrIRhLNRdxTh5xTh5WPBcaFBBT
        RDMcFxFQNhZxTh5xTh5xTh5tTB5GOScAAAAAAAAAAACVbz5yUCFxTh5xTh5xTh5xTh5xTh5xTh5xTh5x
        Th5xTh5uTB4eFQ1pUDkrIBdLNRdxTh5xTh5xTh5xTh5rSh1NNRVsSx1xTh5xTh5xTh5xTR5hQhd7c2sA
        AAAAAAAAAACnlYZ9WilyTyBxTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5uTB4nHA9LNRZxTh5xTh5x
        Th5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5uTB5SNxIAAAAAAAAAAAAAAAAAAACggWB9WilyUCFyTyBy
        Th5xTh5xTh5xTh5xTh5xTh5xTh5xTh5wTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5yTh5yUCBx
        TiBtShuGd2UAAAAAAAAAAAAAAAAAAAAAAACnlYaVbz6BXCp0UCFxTh5xTh5xTh5xTh5xTh5xTh5xTh5x
        Th5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh5xTh50UCB9WCWFXCajkHYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACek4GIbVGGZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeFZkeF
        ZkeFYD+ScEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/////+AAAH+AAAAfAAAADwAAAA8AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAHAAAAD4AAAA/AA
        AAf8AAA//////w==
</value>
  </data>
</root>