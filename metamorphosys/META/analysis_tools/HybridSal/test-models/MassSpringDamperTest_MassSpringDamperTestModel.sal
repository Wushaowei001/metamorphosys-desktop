MassSpringDamperTest_MassSpringDamperTestModel: CONTEXT = 
BEGIN
abs (a:REAL) : REAL  = 
 IF a < 0 THEN -(a) ELSE a ENDIF  ;

multirateInv (xold:REAL,xnew:REAL,r:REAL,yold:REAL,ynew:REAL,s:REAL) : BOOLEAN  = 
 (xnew - xold) / r = (ynew - yold) / s ;

eigenInv (xold:REAL,xnew:REAL) : BOOLEAN  = 
 0 < xnew AND xnew < xold OR xold < xnew AND xnew < 0 OR xold = 0 AND xnew = 0 ;

quadInv (xold:REAL,yold:REAL,xnew:REAL,ynew:REAL) : BOOLEAN  = 
 abs(xnew) <= abs(xold) + abs(yold) AND abs(ynew) <= abs(xold) + abs(yold) AND (abs(xnew) <= abs(xold) OR abs(ynew) <= abs(yold)) AND (abs(xnew) <= abs(yold) OR abs(ynew) <= abs(xold)) ;


control: MODULE =
BEGIN
INPUT MassSpringDamper_Damper_Damper_mo_v_rel:REAL
INPUT MassSpringDamper_Mass_Steel_ModelicaModel_s:REAL
TRANSITION
[
TRUE  --> 
]
END ;


plant: MODULE =
BEGIN
OUTPUT MassSpringDamper_Damper_Damper_mo_v_rel:REAL
OUTPUT MassSpringDamper_Mass_Steel_ModelicaModel_s:REAL
INITIALIZATION
	MassSpringDamper_Damper_Damper_mo_v_rel = 0.0 ;
	MassSpringDamper_Mass_Steel_ModelicaModel_s = 0.0 

TRANSITION
[
TRUE AND TRUE AND TRUE AND eigenInv(1.00 * MassSpringDamper_Mass_Steel_ModelicaModel_s + 0.100 * MassSpringDamper_Damper_Damper_mo_v_rel + -0.50,1.00 * MassSpringDamper_Mass_Steel_ModelicaModel_s' + 0.100 * MassSpringDamper_Damper_Damper_mo_v_rel' + -0.50) AND eigenInv(1.00 * MassSpringDamper_Mass_Steel_ModelicaModel_s + 0.100 * MassSpringDamper_Damper_Damper_mo_v_rel + -0.50,1.00 * MassSpringDamper_Mass_Steel_ModelicaModel_s' + 0.100 * MassSpringDamper_Damper_Damper_mo_v_rel' + -0.50)  --> 
	MassSpringDamper_Damper_Damper_mo_v_rel' IN { aZtQ : REAL | TRUE } ;
	MassSpringDamper_Mass_Steel_ModelicaModel_s' IN { aZtQ : REAL | TRUE } 
]
END ;


system: MODULE =
( control || plant ) ;

p1 : THEOREM
system |- G(TRUE => MassSpringDamper_Mass_Steel_ModelicaModel_s >= 1 => MassSpringDamper_Damper_Damper_mo_v_rel <= -(4));
END
